What happens when you initialize a repository? Why do you need to do it?

It tells git that you want to use version control on the current directory. You still have to add the files you want to track to git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It only includes files that you want to track in git. The repository is the set of files already tracked in git. This allows you to group only the files and changes you want into a logical unit prior to uploading them to git.

How can you use the staging area to make sure you have one commit per logical
change?

You can selectively add only the files that affect the single change to the staging area even
if you have multiple changes made on your branch.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

If you're trying out experimental changes and don't want to affect main development.
If you're releasing a version to a customer and don't want main development to affect it.

How do the diagrams help you visualize the branch structure?

It makes it easier to see which changes are on which branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The changes on both branches are now in one file. There's no other way to represent it other than the diagram.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic merging saves time but manual merges allows for the user to make sure it works correctly before committing.

